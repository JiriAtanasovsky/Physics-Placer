-- This file is for use with Corona(R) SDK
--
-- This file is automatically generated with PhysicsEdtior (http://physicseditor.de). Do not edit
--
-- Usage example:
--			local scaleFactor = 1.0
--			local physicsData = (require "shapedefs").physicsData(scaleFactor)
--			local shape = display.newImage("objectname.png")
--			physics.addBody( shape, physicsData:get("objectname") )
--

-- copy needed functions to local scope
local unpack = unpack
local pairs = pairs
local ipairs = ipairs

local M = {}

function M.physicsData(scale)
	local physics = { data =
	{ 
		
		["barell"] = {
                    
                    
                    
                    
                    {
                    pe_fixture_id = "barell", density = 2, friction = 100, bounce = 0.5, 
                    filter = { categoryBits = 8192, maskBits = 65535, groupIndex = 0 },
                    shape = {   -110.5, -31  ,  -9.5, -29  ,  -2.5, -8  ,  -9.5, 34  ,  -152.5, 30  ,  -152.5, -18  }
                    }
                     ,
                    {
                    pe_fixture_id = "barell", density = 2, friction = 100, bounce = 0.5, 
                    filter = { categoryBits = 8192, maskBits = 65535, groupIndex = 0 },
                    shape = {   -2.5, -8  ,  88.5, -8  ,  91.5, -4  ,  92.5, 7  ,  -9.5, 34  }
                    }
                     ,
                    {
                    pe_fixture_id = "barell", density = 2, friction = 100, bounce = 0.5, 
                    filter = { categoryBits = 8192, maskBits = 65535, groupIndex = 0 },
                    shape = {   196.5, -3  ,  196.5, 6  ,  92.5, 7  ,  91.5, -4  }
                    }
                    
                    
                    
		}
		
		, 
		["base"] = {
                    
                    
                    
                    
                    {
                    pe_fixture_id = "1000-base-1500", density = 10, friction = 300, bounce = 0.5, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   191, 16.5  ,  -191, 16.5  ,  4, -6.5  }
                    }
                    
                    
                    
		}
		
		, 
		["body"] = {
                    
                    
                    
                    
                    {
                    pe_fixture_id = "1200-armor-1500", density = 2, friction = 100, bounce = 0.5, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   29, 56.5  ,  26, -64.5  ,  35, -64.5  ,  68, 55.5  }
                    }
                    
                    
                    
                     ,
                    
                    
                    {
                    pe_fixture_id = "0600-body-1200", density = 2, friction = 100, bounce = 0.5, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -41, 64.5  ,  -44, -39.5  ,  27, -31.5  ,  30, 64.5  }
                    }
                    
                    
                    
		}
		
		, 
		["reference"] = {
                    
		}
		
	} }

        -- apply scale factor
        local s = scale or 1.0
        for bi,body in pairs(physics.data) do
                for fi,fixture in ipairs(body) do
                    if(fixture.shape) then
                        for ci,coordinate in ipairs(fixture.shape) do
                            fixture.shape[ci] = s * coordinate
                        end
                    else
                        fixture.radius = s * fixture.radius
                    end
                end
        end
	
	function physics:get(name)
		return unpack(self.data[name])
	end

	function physics:getFixtureId(name, index)
                return self.data[name][index].pe_fixture_id
	end
	
	return physics;
end

return M

